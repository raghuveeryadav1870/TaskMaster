@using System.Data;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Dashboard";
    ViewData["breadcrumtitle"] = "Graphical Data";
}
<style>
    #revenuechart {
        width: 100%;
        height: 250px;
    }
</style>
<div class="app-content content">
    <div class="content-overlay"></div>
    <div class="content-wrapper">
        <div class="dashboard-report" style="margin-top: 10px; ">
            <div class="row">
                @{
                    DataTable dt = (DataTable)ViewBag.DashboardData;
                    if (dt != null)
                    {
                        if (dt.Rows.Count > 0)
                        {
                            foreach (DataRow row in dt.Rows)
                            {
                                foreach (DataColumn col in dt.Columns)
                                {
                                    <div class="col-md-3" style="margin-top: 10px; ">
                                        <div class="d-report-value  bg-brand-primary">
                                            <span class="value-name text-white">@col.ColumnName.ToString()</span>
                                            @if (!string.IsNullOrEmpty(row[col].ToString()))
                                            {
                                                <span class="value-number text-white">@row[col].ToString()</span>
                                            }
                                            else
                                            {
                                                <span class="value-number text-white">0</span>
                                            }

                                        </div>
                                    </div>
                                }
                            }
                        }
                    }
                }
            </div>
        </div>
        <div class="dashboard-cart" style="margin-top: 20px; ">
            <div class="row">
                <div class="col-md-6">
                    <div class="dgraph graph-panel1">
                        <h2>Task</h2>
                        <div id="revenuechart" style="width:100%; height:330px"></div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="dgraph graph-panel2">
                        <h2>Men</h2>
                        <div id="parkingchart" style="width:670px; height:330px"></div>
                    </div>
                </div>

            </div>
        </div>

    </div>
</div>
<!-- Resources -->
<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/percent.js"></script>
<script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>
<script src="https://cdn.amcharts.com/lib/5/xy.js"></script>

<!--vehicle graph-->
<script>
    /**
     * ---------------------------------------
     * This demo was created using amCharts 5.
     *
     * For more information visit:
     * https://www.amcharts.com/
     *
     * Documentation is available at:
     * https://www.amcharts.com/docs/v5/
     * ---------------------------------------
     */

    // Create root and chart
    var root = am5.Root.new("parkingchart");
        root._logo.dispose();
    root.setThemes([
      am5themes_Animated.new(root)
    ]);

    var chart = root.container.children.push(
      am5percent.PieChart.new(root, {
        radius: am5.percent(80),
        innerRadius: am5.percent(50),
      })
    );

    // Define data
    var data= [@Html.Raw(ViewBag.VehicleGraph)];

    // Create series
    var series = chart.series.push(
      am5percent.PieSeries.new(root, {
        name: "Series",
        valueField: "TotalVehicle",
        categoryField: "Category",
        startAngle:0,
        endAngle: 360
      })
    );

    series.data.setAll(data);
    series.appear();
    chart.appear();

</script>

<!-- revenue Chart -->
<script>
    /**
     * ---------------------------------------
     * This demo was created using amCharts 5.
     *
     * For more information visit:
     * https://www.amcharts.com/
     *
     * Documentation is available at:
     * https://www.amcharts.com/docs/v5/
     * ---------------------------------------
     */

    // Create root and chart
    var root = am5.Root.new("revenuechart");
        root._logo.dispose();
    root.setThemes([
      am5themes_Animated.new(root)
    ]);


    var chart = root.container.children.push(
      am5xy.XYChart.new(root, {
        panY: false,
        wheelY: "zoomX",
        layout: root.verticalLayout
      })
    );

    var data= [@Html.Raw(ViewBag.RevenueGraph)];
        // Create chart
    // https://www.amcharts.com/docs/v5/charts/xy-chart/
    var chart = root.container.children.push(
      am5xy.XYChart.new(root, {
        focusable: true,
        panX: true,
        panY: true,
        wheelX: "panX",
        wheelY: "zoomX"
      })
    );

    var easing = am5.ease.linear;
   // debugger;
    var yAxis = chart.yAxes.push(
      am5xy.ValueAxis.new(root, {
        renderer: am5xy.AxisRendererY.new(root, {})
      })
    );

    // Create X-Axis
    var xAxis = chart.xAxes.push(
      am5xy.DateAxis.new(root, {
        baseInterval: { timeUnit: "day", count: 1 },
        renderer: am5xy.AxisRendererX.new(root, {
                      minGridDistance: 90,
                      minorGridEnabled: true
        }),
      })
    );

    // Create series
    function createSeries(name, field, openField) {
      var series = chart.series.push(
        am5xy.ColumnSeries.new(root, {
          name: name,
          xAxis: xAxis,
          yAxis: yAxis,
          valueYField: field,
          valueXField:openField,
          tooltip: am5.Tooltip.new(root, {
          pointerOrientation: "horizontal",
          labelText: "{valueY}",
          interpolationDuration: 2000,
          interpolationEasing: am5.ease.inOut(am5.ease.elastic)
        })
        })
      );

       series.appear();

      series.columns.template.setAll({
        fillOpacity: 0.5,
        strokeWidth: 2,
        width: am5.percent(80)
      });

     series.data.processor = am5.DataProcessor.new(root, {
      numericFields: ["price"],
      dateFields: ["date"],
      dateFormat: "yyyy-MM-dd"
     });

      series.data.setAll(data);

      series.columns.template.states.create("riseFromPrevious", {
        fill: am5.color(0x76b041),
        stroke: am5.color(0x76b041)
      });

      series.columns.template.states.create("dropFromPrevious", {
        fill: am5.color(0xe4572e),
        stroke: am5.color(0xe4572e)
      });
    }

    chart.set("scrollbarX", am5.Scrollbar.new(root, {
      orientation: "horizontal"
    }));

     chart.set("cursor", am5xy.XYCursor.new(root, {}));

    createSeries("Monthly Revenue Graph", "price", "date");
     series.appear(1000, 100);
     chart.appear(1000, 100);
</script>

